{/* End Call Button */}
                                  <button
                                    onClick={endCall}
                                    className="bg-red-500/80 hover:bg-red-500 text-white rounded-full p-5 transition-all duration-200 shadow-lg hover:shadow-red-500/20 flex items-center justify-center group"
                                  >
                                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 transform rotate-135 group-hover:scale-110 transition-transform" fill="currentColor" viewBox="0 0 24 24">
                                      <path d="M20.01 15.38c-1.23 0-2.42-.2-3.53-.56a.977.977 0 00-1.01.24l-1.57 1.97c-2.83-1.35-5.48-3.9-6.89-6.83l1.95-1.66c.27-.28.35-.67.24-1.02-.37-1.11-.56-2.3-.56-3.53 0-.54-.45-.99-.99-.99H4.19C3.65 3 3 3.24 3 3.99 3 13.28 10.73 21 20.01 21c.71 0 .99-.63.99-1.18v-3.45c0-.54-.45-.99-.99-.99z"/>
                                    </svg>
                                  </button>
                                </div>
                              </div>
                            </div>
                          );
                        };

                          // Don't show blank screen - always render the UI structure
                          // Authentication redirect happens in useEffect background
                          return (
                            <div className="flex h-screen bg-black text-white overflow-hidden" suppressHydrationWarning={true}>
                            {/* Custom Modals */}
                            <ConfirmModal
                                isOpen={showConfirmModal}
                                onClose={() => setShowConfirmModal(false)}
                                onConfirm={modalConfig.onConfirm}
                                title={modalConfig.title}
                                message={modalConfig.message}
                                confirmText={modalConfig.confirmText}
                                cancelText={modalConfig.cancelText}
                                type={modalConfig.type}
                              />

                              <AlertModal
                                isOpen={showAlertModal}
                                onClose={() => setShowAlertModal(false)}
                                title={alertConfig.title}
                                message={alertConfig.message}
                                buttonText={alertConfig.buttonText}
                                type={alertConfig.type}
                              />

                              {/* Quick Purchase Modal */}