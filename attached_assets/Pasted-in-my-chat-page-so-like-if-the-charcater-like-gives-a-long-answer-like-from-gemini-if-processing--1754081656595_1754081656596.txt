in my chat page, so like if the charcater like gives a long answer, like from gemini, if processing for tts in fish audio, it takes a lot time to get my response time back, cause it proceess a long text response, so i have an idea, what if like if the text response from gemini is like long, we divide the text to send to tts to two parts? and we will make the first part like just a short text, so it will process much faster and send back to my frontend. and we make the second part like process in parallel and just follow up? you know what i mean? understand everything and analyze first, no coding for now, also again, it must be only in "2 chunks" only, ok?:
💬 [CHAT] Processing message for gojo: "hi..."
💫 [CHAT] Using session: eT7aLs2uyXe3DqEuNT14jKXlJpu2-gojo-1754014922148
🤖 [CHAT] Generating AI response for gojo...
🏗️ [GEMINI] Created singleton GeminiService instance
🚀 [GEMINI] Generating response for gojo using ChatSession
📚 [GEMINI] Creating fresh ChatSession for eT7aLs2uyXe3DqEuNT14jKXlJpu2-gojo-1754014922148-gojo - conversation memory starts now
✨ [GEMINI] Created NEW ChatSession for eT7aLs2uyXe3DqEuNT14jKXlJpu2-gojo-1754014922148-gojo with 2 initial history items
✅ [GEMINI] Response generated using persistent ChatSession with automatic conversation memory!
✅ [CHAT] AI response generated: "(delighted) Well hello there! Fancy seeing you aro..."
POST /api/conversation/gojo/chat 200 in 5615ms
○ Compiling /api/voice/tts ...
💾 [CONVERSATION] Appended messages to existing session: eT7aLs2uyXe3DqEuNT14jKXlJpu2-gojo-1754014922148
✓ Compiled /api/voice/tts in 1204ms
🔊 [TTS-RAW] Starting raw Fish Audio API request with s1 model...
🔊 [TTS-RAW] Generating for gojo (323dc6ca4f4f491996383de8be396425) using s1 model: "(delighted) Well hello there! Fancy seeing you aro..."
🔄 [TTS-RAW] Sending MessagePack request to Fish Audio API with s1 model...
🔍 Checking for users needing message reset...
✅ No users need message reset
✅ [TTS-RAW] Audio generated successfully with s1 model: 720940 bytes in 6634ms
POST /api/voice/tts 200 in 7894ms